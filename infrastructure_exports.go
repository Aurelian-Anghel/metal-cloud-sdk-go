// Code generated by gen_exports.go DO NOT EDIT

package metalcloud

//InfrastructureEdit alters an infrastructure
func (c *Client) InfrastructureEdit(infrastructureID int, infrastructureOperation InfrastructureOperation) (*Infrastructure, error) {
	return c.infrastructureEdit(infrastructureID,infrastructureOperation)
}

//InfrastructureEditByLabel alters an infrastructure
func (c *Client) InfrastructureEditByLabel(infrastructureLabel string, infrastructureOperation InfrastructureOperation) (*Infrastructure, error) {
	return c.infrastructureEdit(infrastructureLabel,infrastructureOperation)
}

//InfrastructureDelete deletes an infrastructure and all associated elements. Requires deploy
func (c *Client) InfrastructureDelete(infrastructureID int) error {
	return c.infrastructureDelete(infrastructureID)
}

//InfrastructureDeleteByLabel deletes an infrastructure and all associated elements. Requires deploy
func (c *Client) InfrastructureDeleteByLabel(infrastructureLabel string) error {
	return c.infrastructureDelete(infrastructureLabel)
}

//InfrastructureOperationCancel reverts (undos) alterations done before deploy
func (c *Client) InfrastructureOperationCancel(infrastructureID int) error {
	return c.infrastructureOperationCancel(infrastructureID)
}

//InfrastructureOperationCancelByLabel reverts (undos) alterations done before deploy
func (c *Client) InfrastructureOperationCancelByLabel(infrastructureLabel string) error {
	return c.infrastructureOperationCancel(infrastructureLabel)
}

//InfrastructureDeploy initiates a deploy operation that will apply all registered changes for the respective infrastructure
func (c *Client) InfrastructureDeploy(infrastructureID int, shutdownOptions ShutdownOptions, allowDataLoss bool, skipAnsible bool) error {
	return c.infrastructureDeploy(infrastructureID,shutdownOptions,allowDataLoss,skipAnsible)
}

//InfrastructureDeployByLabel initiates a deploy operation that will apply all registered changes for the respective infrastructure
func (c *Client) InfrastructureDeployByLabel(infrastructureLabel string, shutdownOptions ShutdownOptions, allowDataLoss bool, skipAnsible bool) error {
	return c.infrastructureDeploy(infrastructureLabel,shutdownOptions,allowDataLoss,skipAnsible)
}

//InfrastructureGet returns a specific infrastructure by id
func (c *Client) InfrastructureGet(infrastructureID int) (*Infrastructure, error) {
	return c.infrastructureGet(infrastructureID)
}

//InfrastructureGetByLabel returns a specific infrastructure by id
func (c *Client) InfrastructureGetByLabel(infrastructureLabel string) (*Infrastructure, error) {
	return c.infrastructureGet(infrastructureLabel)
}

//InfrastructureUserLimits returns user metadata
func (c *Client) InfrastructureUserLimits(infrastructureID int) (*map[string]interface{}, error) {
	return c.infrastructureUserLimits(infrastructureID)
}

//InfrastructureUserLimitsByLabel returns user metadata
func (c *Client) InfrastructureUserLimitsByLabel(infrastructureLabel string) (*map[string]interface{}, error) {
	return c.infrastructureUserLimits(infrastructureLabel)
}
