// Code generated by gen_exports.go DO NOT EDIT

package metalcloud

//NetworkGet retrieves a network object
func (c *Client) NetworkGet(networkID int) (*Network, error) {
	return c.networkGet(networkID)
}

//NetworkGetByLabel retrieves a network object
func (c *Client) NetworkGetByLabel(networkLabel string) (*Network, error) {
	return c.networkGet(networkLabel)
}

//Networks returns a list of all network objects of an infrastructure
func (c *Client) Networks(infrastructureID int) (*map[string]Network, error) {
	return c.networks(infrastructureID)
}

//NetworksByLabel returns a list of all network objects of an infrastructure
func (c *Client) NetworksByLabel(infrastructureLabel string) (*map[string]Network, error) {
	return c.networks(infrastructureLabel)
}

//NetworkCreate creates a network
func (c *Client) NetworkCreate(infrastructureID int, network Network) (*Network, error) {
	return c.networkCreate(infrastructureID,network)
}

//NetworkCreateByLabel creates a network
func (c *Client) NetworkCreateByLabel(infrastructureLabel string, network Network) (*Network, error) {
	return c.networkCreate(infrastructureLabel,network)
}

//NetworkEdit applies a change to an existing network
func (c *Client) NetworkEdit(networkID int, networkOperation NetworkOperation) (*Network, error) {
	return c.networkEdit(networkID,networkOperation)
}

//NetworkEditByLabel applies a change to an existing network
func (c *Client) NetworkEditByLabel(networkLabel string, networkOperation NetworkOperation) (*Network, error) {
	return c.networkEdit(networkLabel,networkOperation)
}

//NetworkDelete deletes a network.
func (c *Client) NetworkDelete(networkID int) error {
	return c.networkDelete(networkID)
}

//NetworkDeleteByLabel deletes a network.
func (c *Client) NetworkDeleteByLabel(networkLabel string) error {
	return c.networkDelete(networkLabel)
}

//NetworkJoin merges two specified Network objects.
func (c *Client) NetworkJoin(networkID int, networkToBeDeletedID int) error {
	return c.networkJoin(networkID,networkToBeDeletedID)
}

//NetworkJoinByLabel merges two specified Network objects.
func (c *Client) NetworkJoinByLabel(networkLabel string, networkToBeDeletedID int) error {
	return c.networkJoin(networkLabel,networkToBeDeletedID)
}
