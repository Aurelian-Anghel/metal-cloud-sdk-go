// DO NOT EDIT: this file is automatically generated by docgen
package metalcloud

import (
	"github.com/projectdiscovery/yamldoc-go/encoder"
)

var (
	StageDefinitionDoc           encoder.Doc
	HTTPRequestDoc               encoder.Doc
	WebFetchAAPIOptionsDoc       encoder.Doc
	WebFetchAPIRequestHeadersDoc encoder.Doc
	AnsibleBundleDoc             encoder.Doc
	WorkflowReferenceDoc         encoder.Doc
	SSHExecDoc                   encoder.Doc
	SSHClientOptionsDoc          encoder.Doc
	SSHAlgorithmsDoc             encoder.Doc
	CopyDoc                      encoder.Doc
	SCPResourceLocationDoc       encoder.Doc
)

func init() {
	StageDefinitionDoc.Type = "StageDefinition"
	StageDefinitionDoc.Comments[encoder.LineComment] = "StageDefinition Also called a workflow task contains a JavaScript file, HTTP request url and options, an AnsibleBundle or an API call template."
	StageDefinitionDoc.Description = "StageDefinition Also called a workflow task contains a JavaScript file, HTTP request url and options, an AnsibleBundle or an API call template."
	StageDefinitionDoc.Fields = make([]encoder.Doc, 15)
	StageDefinitionDoc.Fields[0].Name = "id"
	StageDefinitionDoc.Fields[0].Type = "int"
	StageDefinitionDoc.Fields[0].Note = ""
	StageDefinitionDoc.Fields[0].Description = "Id of the object"
	StageDefinitionDoc.Fields[0].Comments[encoder.LineComment] = "Id of the object"
	StageDefinitionDoc.Fields[1].Name = "ownerID"
	StageDefinitionDoc.Fields[1].Type = "int"
	StageDefinitionDoc.Fields[1].Note = ""
	StageDefinitionDoc.Fields[1].Description = "Id of the owner"
	StageDefinitionDoc.Fields[1].Comments[encoder.LineComment] = "Id of the owner"
	StageDefinitionDoc.Fields[2].Name = "userIDAuthenticated"
	StageDefinitionDoc.Fields[2].Type = "int"
	StageDefinitionDoc.Fields[2].Note = ""
	StageDefinitionDoc.Fields[2].Description = "Id of the user who created the task. Internal."
	StageDefinitionDoc.Fields[2].Comments[encoder.LineComment] = "Id of the user who created the task. Internal."
	StageDefinitionDoc.Fields[3].Name = "label"
	StageDefinitionDoc.Fields[3].Type = "string"
	StageDefinitionDoc.Fields[3].Note = ""
	StageDefinitionDoc.Fields[3].Description = "Label of the task"
	StageDefinitionDoc.Fields[3].Comments[encoder.LineComment] = "Label of the task"
	StageDefinitionDoc.Fields[4].Name = "iconAssetDataURI"
	StageDefinitionDoc.Fields[4].Type = "string"
	StageDefinitionDoc.Fields[4].Note = ""
	StageDefinitionDoc.Fields[4].Description = "Internal"
	StageDefinitionDoc.Fields[4].Comments[encoder.LineComment] = "Internal"
	StageDefinitionDoc.Fields[5].Name = "title"
	StageDefinitionDoc.Fields[5].Type = "string"
	StageDefinitionDoc.Fields[5].Note = ""
	StageDefinitionDoc.Fields[5].Description = "Title (Name) of the task"
	StageDefinitionDoc.Fields[5].Comments[encoder.LineComment] = "Title (Name) of the task"
	StageDefinitionDoc.Fields[6].Name = "description"
	StageDefinitionDoc.Fields[6].Type = "string"
	StageDefinitionDoc.Fields[6].Note = ""
	StageDefinitionDoc.Fields[6].Description = "Description of the task"
	StageDefinitionDoc.Fields[6].Comments[encoder.LineComment] = "Description of the task"
	StageDefinitionDoc.Fields[7].Name = "type"
	StageDefinitionDoc.Fields[7].Type = "string"
	StageDefinitionDoc.Fields[7].Note = ""
	StageDefinitionDoc.Fields[7].Description = "Type of task"
	StageDefinitionDoc.Fields[7].Comments[encoder.LineComment] = "Type of task"
	StageDefinitionDoc.Fields[7].Values = []string{
		"AnsibleBundle",
		"JavaScript",
		"APICall",
		"HTTPRequest",
		"Copy",
		"WorkflowReference",
	}
	StageDefinitionDoc.Fields[8].Name = "variableNames"
	StageDefinitionDoc.Fields[8].Type = "[]string"
	StageDefinitionDoc.Fields[8].Note = ""
	StageDefinitionDoc.Fields[8].Description = "list of variable names required when executing this task."
	StageDefinitionDoc.Fields[8].Comments[encoder.LineComment] = "list of variable names required when executing this task."
	StageDefinitionDoc.Fields[9].Name = "stageDefinition"
	StageDefinitionDoc.Fields[9].Type = "interface{}"
	StageDefinitionDoc.Fields[9].Note = ""
	StageDefinitionDoc.Fields[9].Description = "More details depending on the type of task"
	StageDefinitionDoc.Fields[9].Comments[encoder.LineComment] = "More details depending on the type of task"
	StageDefinitionDoc.Fields[9].Values = []string{
		"HTTPRequest",
		"AnsibleBundle",
		"WorkflowReference",
		"SSHExec",
		"Copy",
	}
	StageDefinitionDoc.Fields[10].Name = "createdTimestamp"
	StageDefinitionDoc.Fields[10].Type = "string"
	StageDefinitionDoc.Fields[10].Note = ""
	StageDefinitionDoc.Fields[10].Description = "ISO 8601 timestamp which holds the date and time when the stage definition record was created. Readonly."
	StageDefinitionDoc.Fields[10].Comments[encoder.LineComment] = "ISO 8601 timestamp which holds the date and time when the stage definition record was created. Readonly."
	StageDefinitionDoc.Fields[11].Name = "updatedTimestamp"
	StageDefinitionDoc.Fields[11].Type = "string"
	StageDefinitionDoc.Fields[11].Note = ""
	StageDefinitionDoc.Fields[11].Description = "ISO 8601 timestamp which holds the date and time when the stage definition record was updated. Readonly."
	StageDefinitionDoc.Fields[11].Comments[encoder.LineComment] = "ISO 8601 timestamp which holds the date and time when the stage definition record was updated. Readonly."
	StageDefinitionDoc.Fields[12].Name = "context"
	StageDefinitionDoc.Fields[12].Type = "string"
	StageDefinitionDoc.Fields[12].Note = ""
	StageDefinitionDoc.Fields[12].Description = "Internal. Readonly."
	StageDefinitionDoc.Fields[12].Comments[encoder.LineComment] = "Internal. Readonly."
	StageDefinitionDoc.Fields[12].Values = []string{
		"local",
		"global",
	}
	StageDefinitionDoc.Fields[13].Name = "automaticallyAddedToPreDeploys"
	StageDefinitionDoc.Fields[13].Type = "int"
	StageDefinitionDoc.Fields[13].Note = ""
	StageDefinitionDoc.Fields[13].Description = "If set to 1 it will be added to all infrastructures at the pre-deploy stage"
	StageDefinitionDoc.Fields[13].Comments[encoder.LineComment] = "If set to 1 it will be added to all infrastructures at the pre-deploy stage"
	StageDefinitionDoc.Fields[14].Name = "automaticallyAddedToPostDeploys"
	StageDefinitionDoc.Fields[14].Type = "int"
	StageDefinitionDoc.Fields[14].Note = ""
	StageDefinitionDoc.Fields[14].Description = "If set to 1 it will be added to all infrastructures at the post-deploy stage"
	StageDefinitionDoc.Fields[14].Comments[encoder.LineComment] = "If set to 1 it will be added to all infrastructures at the post-deploy stage"

	HTTPRequestDoc.Type = "HTTPRequest"
	HTTPRequestDoc.Comments[encoder.LineComment] = "HTTPRequest represents an HTTP request definition compatible with the standard Web Fetch API."
	HTTPRequestDoc.Description = "HTTPRequest represents an HTTP request definition compatible with the standard Web Fetch API."
	HTTPRequestDoc.Fields = make([]encoder.Doc, 3)
	HTTPRequestDoc.Fields[0].Name = "url"
	HTTPRequestDoc.Fields[0].Type = "string"
	HTTPRequestDoc.Fields[0].Note = ""
	HTTPRequestDoc.Fields[0].Description = "URL to call"
	HTTPRequestDoc.Fields[0].Comments[encoder.LineComment] = "URL to call"
	HTTPRequestDoc.Fields[1].Name = "options"
	HTTPRequestDoc.Fields[1].Type = "WebFetchAAPIOptions"
	HTTPRequestDoc.Fields[1].Note = ""
	HTTPRequestDoc.Fields[1].Description = "Options"
	HTTPRequestDoc.Fields[1].Comments[encoder.LineComment] = "Options"
	HTTPRequestDoc.Fields[2].Name = "url"
	HTTPRequestDoc.Fields[2].Type = "string"
	HTTPRequestDoc.Fields[2].Note = ""
	HTTPRequestDoc.Fields[2].Description = "Internal"
	HTTPRequestDoc.Fields[2].Comments[encoder.LineComment] = "Internal"

	WebFetchAAPIOptionsDoc.Type = "WebFetchAAPIOptions"
	WebFetchAAPIOptionsDoc.Comments[encoder.LineComment] = "WebFetchAAPIOptions represents node-fetch options which is follows the Web API Fetch specification. See https://github.com/node-fetch/node-fetch"
	WebFetchAAPIOptionsDoc.Description = "WebFetchAAPIOptions represents node-fetch options which is follows the Web API Fetch specification. See https://github.com/node-fetch/node-fetch"
	WebFetchAAPIOptionsDoc.AppearsIn = []encoder.Appearance{
		{
			TypeName:  "HTTPRequest",
			FieldName: "options",
		},
	}
	WebFetchAAPIOptionsDoc.Fields = make([]encoder.Doc, 9)
	WebFetchAAPIOptionsDoc.Fields[0].Name = "method"
	WebFetchAAPIOptionsDoc.Fields[0].Type = "string"
	WebFetchAAPIOptionsDoc.Fields[0].Note = ""
	WebFetchAAPIOptionsDoc.Fields[0].Description = "HTTP Method to use"
	WebFetchAAPIOptionsDoc.Fields[0].Comments[encoder.LineComment] = "HTTP Method to use"
	WebFetchAAPIOptionsDoc.Fields[1].Name = "redirect"
	WebFetchAAPIOptionsDoc.Fields[1].Type = "string"
	WebFetchAAPIOptionsDoc.Fields[1].Note = ""
	WebFetchAAPIOptionsDoc.Fields[1].Description = "Defaults to 'follow'. Set to `manual` to extract redirect headers, `error` to reject redirect"
	WebFetchAAPIOptionsDoc.Fields[1].Comments[encoder.LineComment] = "Defaults to 'follow'. Set to `manual` to extract redirect headers, `error` to reject redirect"
	WebFetchAAPIOptionsDoc.Fields[1].Values = []string{
		"follow",
		"manual",
		"error",
	}
	WebFetchAAPIOptionsDoc.Fields[2].Name = "follow"
	WebFetchAAPIOptionsDoc.Fields[2].Type = "int"
	WebFetchAAPIOptionsDoc.Fields[2].Note = ""
	WebFetchAAPIOptionsDoc.Fields[2].Description = "Maximum redirect count. 0 to not follow redirect. Defaults to 20"
	WebFetchAAPIOptionsDoc.Fields[2].Comments[encoder.LineComment] = "Maximum redirect count. 0 to not follow redirect. Defaults to 20"
	WebFetchAAPIOptionsDoc.Fields[3].Name = "compress"
	WebFetchAAPIOptionsDoc.Fields[3].Type = "bool"
	WebFetchAAPIOptionsDoc.Fields[3].Note = ""
	WebFetchAAPIOptionsDoc.Fields[3].Description = "If se to true it will support compression"
	WebFetchAAPIOptionsDoc.Fields[3].Comments[encoder.LineComment] = "If se to true it will support compression"
	WebFetchAAPIOptionsDoc.Fields[4].Name = "timeout"
	WebFetchAAPIOptionsDoc.Fields[4].Type = "int"
	WebFetchAAPIOptionsDoc.Fields[4].Note = ""
	WebFetchAAPIOptionsDoc.Fields[4].Description = "Timeout setting in seconds"
	WebFetchAAPIOptionsDoc.Fields[4].Comments[encoder.LineComment] = "Timeout setting in seconds"
	WebFetchAAPIOptionsDoc.Fields[5].Name = "size"
	WebFetchAAPIOptionsDoc.Fields[5].Type = "int"
	WebFetchAAPIOptionsDoc.Fields[5].Note = ""
	WebFetchAAPIOptionsDoc.Fields[5].Description = "Maximum response body size in bytes. 0 to disable (default)"
	WebFetchAAPIOptionsDoc.Fields[5].Comments[encoder.LineComment] = "Maximum response body size in bytes. 0 to disable (default)"
	WebFetchAAPIOptionsDoc.Fields[6].Name = "headers"
	WebFetchAAPIOptionsDoc.Fields[6].Type = "WebFetchAPIRequestHeaders"
	WebFetchAAPIOptionsDoc.Fields[6].Note = ""
	WebFetchAAPIOptionsDoc.Fields[6].Description = "Request headers"
	WebFetchAAPIOptionsDoc.Fields[6].Comments[encoder.LineComment] = "Request headers"
	WebFetchAAPIOptionsDoc.Fields[7].Name = "body"
	WebFetchAAPIOptionsDoc.Fields[7].Type = "string"
	WebFetchAAPIOptionsDoc.Fields[7].Note = ""
	WebFetchAAPIOptionsDoc.Fields[7].Description = "Body of the request"
	WebFetchAAPIOptionsDoc.Fields[7].Comments[encoder.LineComment] = "Body of the request"
	WebFetchAAPIOptionsDoc.Fields[8].Name = "bodyBase64"
	WebFetchAAPIOptionsDoc.Fields[8].Type = "string"
	WebFetchAAPIOptionsDoc.Fields[8].Note = ""
	WebFetchAAPIOptionsDoc.Fields[8].Description = "Body of the requested encoded base64"
	WebFetchAAPIOptionsDoc.Fields[8].Comments[encoder.LineComment] = "Body of the requested encoded base64"

	WebFetchAPIRequestHeadersDoc.Type = "WebFetchAPIRequestHeaders"
	WebFetchAPIRequestHeadersDoc.Comments[encoder.LineComment] = "WebFetchAPIRequestHeaders HTTP request headers. null means undefined (the default for most) so the header will not be included with the request."
	WebFetchAPIRequestHeadersDoc.Description = "WebFetchAPIRequestHeaders HTTP request headers. null means undefined (the default for most) so the header will not be included with the request."
	WebFetchAPIRequestHeadersDoc.AppearsIn = []encoder.Appearance{
		{
			TypeName:  "WebFetchAAPIOptions",
			FieldName: "headers",
		},
	}
	WebFetchAPIRequestHeadersDoc.Fields = make([]encoder.Doc, 7)
	WebFetchAPIRequestHeadersDoc.Fields[0].Name = "accept"
	WebFetchAPIRequestHeadersDoc.Fields[0].Type = "string"
	WebFetchAPIRequestHeadersDoc.Fields[0].Note = ""
	WebFetchAPIRequestHeadersDoc.Fields[0].Description = "accept header"
	WebFetchAPIRequestHeadersDoc.Fields[0].Comments[encoder.LineComment] = "accept header"
	WebFetchAPIRequestHeadersDoc.Fields[1].Name = "userAgent"
	WebFetchAPIRequestHeadersDoc.Fields[1].Type = "string"
	WebFetchAPIRequestHeadersDoc.Fields[1].Note = ""
	WebFetchAPIRequestHeadersDoc.Fields[1].Description = "user-agent header"
	WebFetchAPIRequestHeadersDoc.Fields[1].Comments[encoder.LineComment] = "user-agent header"
	WebFetchAPIRequestHeadersDoc.Fields[2].Name = "contentType"
	WebFetchAPIRequestHeadersDoc.Fields[2].Type = "string"
	WebFetchAPIRequestHeadersDoc.Fields[2].Note = ""
	WebFetchAPIRequestHeadersDoc.Fields[2].Description = "content-type header"
	WebFetchAPIRequestHeadersDoc.Fields[2].Comments[encoder.LineComment] = "content-type header"
	WebFetchAPIRequestHeadersDoc.Fields[3].Name = "cookie"
	WebFetchAPIRequestHeadersDoc.Fields[3].Type = "string"
	WebFetchAPIRequestHeadersDoc.Fields[3].Note = ""
	WebFetchAPIRequestHeadersDoc.Fields[3].Description = "cookie header"
	WebFetchAPIRequestHeadersDoc.Fields[3].Comments[encoder.LineComment] = "cookie header"
	WebFetchAPIRequestHeadersDoc.Fields[4].Name = "authorization"
	WebFetchAPIRequestHeadersDoc.Fields[4].Type = "string"
	WebFetchAPIRequestHeadersDoc.Fields[4].Note = ""
	WebFetchAPIRequestHeadersDoc.Fields[4].Description = "authorization header"
	WebFetchAPIRequestHeadersDoc.Fields[4].Comments[encoder.LineComment] = "authorization header"
	WebFetchAPIRequestHeadersDoc.Fields[5].Name = "proxyAuthorization"
	WebFetchAPIRequestHeadersDoc.Fields[5].Type = "string"
	WebFetchAPIRequestHeadersDoc.Fields[5].Note = ""
	WebFetchAPIRequestHeadersDoc.Fields[5].Description = "proxy-authorization header"
	WebFetchAPIRequestHeadersDoc.Fields[5].Comments[encoder.LineComment] = "proxy-authorization header"
	WebFetchAPIRequestHeadersDoc.Fields[6].Name = "contentMD5"
	WebFetchAPIRequestHeadersDoc.Fields[6].Type = "string"
	WebFetchAPIRequestHeadersDoc.Fields[6].Note = ""
	WebFetchAPIRequestHeadersDoc.Fields[6].Description = "content-md5 header"
	WebFetchAPIRequestHeadersDoc.Fields[6].Comments[encoder.LineComment] = "content-md5 header"

	AnsibleBundleDoc.Type = "AnsibleBundle"
	AnsibleBundleDoc.Comments[encoder.LineComment] = "AnsibleBundle contains an Ansible project as a single archive file, usually .zip"
	AnsibleBundleDoc.Description = "AnsibleBundle contains an Ansible project as a single archive file, usually .zip"
	AnsibleBundleDoc.Fields = make([]encoder.Doc, 3)
	AnsibleBundleDoc.Fields[0].Name = "filename"
	AnsibleBundleDoc.Fields[0].Type = "string"
	AnsibleBundleDoc.Fields[0].Note = ""
	AnsibleBundleDoc.Fields[0].Description = "file name"
	AnsibleBundleDoc.Fields[0].Comments[encoder.LineComment] = "file name"
	AnsibleBundleDoc.Fields[1].Name = "contentsBase64"
	AnsibleBundleDoc.Fields[1].Type = "string"
	AnsibleBundleDoc.Fields[1].Note = ""
	AnsibleBundleDoc.Fields[1].Description = "Content in base64"
	AnsibleBundleDoc.Fields[1].Comments[encoder.LineComment] = "Content in base64"
	AnsibleBundleDoc.Fields[2].Name = "type"
	AnsibleBundleDoc.Fields[2].Type = "string"
	AnsibleBundleDoc.Fields[2].Note = ""
	AnsibleBundleDoc.Fields[2].Description = "internal"
	AnsibleBundleDoc.Fields[2].Comments[encoder.LineComment] = "internal"

	WorkflowReferenceDoc.Type = "WorkflowReference"
	WorkflowReferenceDoc.Comments[encoder.LineComment] = "WorkflowReference points to a Workflow object via its workflow_id. To be used as a stage definition."
	WorkflowReferenceDoc.Description = "WorkflowReference points to a Workflow object via its workflow_id. To be used as a stage definition."
	WorkflowReferenceDoc.Fields = make([]encoder.Doc, 2)
	WorkflowReferenceDoc.Fields[0].Name = "workflowId"
	WorkflowReferenceDoc.Fields[0].Type = "int"
	WorkflowReferenceDoc.Fields[0].Note = ""
	WorkflowReferenceDoc.Fields[0].Description = "id of the workflow to reference"
	WorkflowReferenceDoc.Fields[0].Comments[encoder.LineComment] = "id of the workflow to reference"
	WorkflowReferenceDoc.Fields[1].Name = "type"
	WorkflowReferenceDoc.Fields[1].Type = "string"
	WorkflowReferenceDoc.Fields[1].Note = ""
	WorkflowReferenceDoc.Fields[1].Description = "internal"
	WorkflowReferenceDoc.Fields[1].Comments[encoder.LineComment] = "internal"

	SSHExecDoc.Type = "SSHExec"
	SSHExecDoc.Comments[encoder.LineComment] = "SSHExec executes a command on a remote server using the SSH exec functionality (not through a shell)."
	SSHExecDoc.Description = "SSHExec executes a command on a remote server using the SSH exec functionality (not through a shell)."
	SSHExecDoc.Fields = make([]encoder.Doc, 4)
	SSHExecDoc.Fields[0].Name = "command"
	SSHExecDoc.Fields[0].Type = "string"
	SSHExecDoc.Fields[0].Note = ""
	SSHExecDoc.Fields[0].Description = "Command to execute"
	SSHExecDoc.Fields[0].Comments[encoder.LineComment] = "Command to execute"
	SSHExecDoc.Fields[1].Name = "target"
	SSHExecDoc.Fields[1].Type = "SSHClientOptions"
	SSHExecDoc.Fields[1].Note = ""
	SSHExecDoc.Fields[1].Description = "Details on how to connect to the target system"
	SSHExecDoc.Fields[1].Comments[encoder.LineComment] = "Details on how to connect to the target system"
	SSHExecDoc.Fields[2].Name = "timeout"
	SSHExecDoc.Fields[2].Type = "int"
	SSHExecDoc.Fields[2].Note = ""
	SSHExecDoc.Fields[2].Description = "Timeout in seconds"
	SSHExecDoc.Fields[2].Comments[encoder.LineComment] = "Timeout in seconds"
	SSHExecDoc.Fields[3].Name = "type"
	SSHExecDoc.Fields[3].Type = "string"
	SSHExecDoc.Fields[3].Note = ""
	SSHExecDoc.Fields[3].Description = "Internal"
	SSHExecDoc.Fields[3].Comments[encoder.LineComment] = "Internal"

	SSHClientOptionsDoc.Type = "SSHClientOptions"
	SSHClientOptionsDoc.Comments[encoder.LineComment] = "SSHClientOptions defines an ssh cnnection such as the host, port, user, password, private keys, etc. All properties support template-like variables; for example, ${{instance_credentials_password}} may be used as value for the password property."
	SSHClientOptionsDoc.Description = "SSHClientOptions defines an ssh cnnection such as the host, port, user, password, private keys, etc. All properties support template-like variables; for example, ${{instance_credentials_password}} may be used as value for the password property."
	SSHClientOptionsDoc.AppearsIn = []encoder.Appearance{
		{
			TypeName:  "SSHExec",
			FieldName: "target",
		},
		{
			TypeName:  "SCPResourceLocation",
			FieldName: "target",
		},
	}
	SSHClientOptionsDoc.Fields = make([]encoder.Doc, 14)
	SSHClientOptionsDoc.Fields[0].Name = "host"
	SSHClientOptionsDoc.Fields[0].Type = "string"
	SSHClientOptionsDoc.Fields[0].Note = ""
	SSHClientOptionsDoc.Fields[0].Description = "Host"
	SSHClientOptionsDoc.Fields[0].Comments[encoder.LineComment] = "Host"
	SSHClientOptionsDoc.Fields[1].Name = "port"
	SSHClientOptionsDoc.Fields[1].Type = "int"
	SSHClientOptionsDoc.Fields[1].Note = ""
	SSHClientOptionsDoc.Fields[1].Description = "Port"
	SSHClientOptionsDoc.Fields[1].Comments[encoder.LineComment] = "Port"
	SSHClientOptionsDoc.Fields[2].Name = "forceIPv4"
	SSHClientOptionsDoc.Fields[2].Type = "bool"
	SSHClientOptionsDoc.Fields[2].Note = ""
	SSHClientOptionsDoc.Fields[2].Description = "Force the use of ipv4"
	SSHClientOptionsDoc.Fields[2].Comments[encoder.LineComment] = "Force the use of ipv4"
	SSHClientOptionsDoc.Fields[3].Name = "forceIPv6"
	SSHClientOptionsDoc.Fields[3].Type = "bool"
	SSHClientOptionsDoc.Fields[3].Note = ""
	SSHClientOptionsDoc.Fields[3].Description = "Force the use of ipv6"
	SSHClientOptionsDoc.Fields[3].Comments[encoder.LineComment] = "Force the use of ipv6"
	SSHClientOptionsDoc.Fields[4].Name = "hostHash"
	SSHClientOptionsDoc.Fields[4].Type = "string"
	SSHClientOptionsDoc.Fields[4].Note = ""
	SSHClientOptionsDoc.Fields[4].Description = "Hash of the host"
	SSHClientOptionsDoc.Fields[4].Comments[encoder.LineComment] = "Hash of the host"
	SSHClientOptionsDoc.Fields[5].Name = "hashedKey"
	SSHClientOptionsDoc.Fields[5].Type = "string"
	SSHClientOptionsDoc.Fields[5].Note = ""
	SSHClientOptionsDoc.Fields[5].Description = "Hash key of the host"
	SSHClientOptionsDoc.Fields[5].Comments[encoder.LineComment] = "Hash key of the host"
	SSHClientOptionsDoc.Fields[6].Name = "username"
	SSHClientOptionsDoc.Fields[6].Type = "string"
	SSHClientOptionsDoc.Fields[6].Note = ""
	SSHClientOptionsDoc.Fields[6].Description = "Username"
	SSHClientOptionsDoc.Fields[6].Comments[encoder.LineComment] = "Username"
	SSHClientOptionsDoc.Fields[7].Name = "password"
	SSHClientOptionsDoc.Fields[7].Type = "string"
	SSHClientOptionsDoc.Fields[7].Note = ""
	SSHClientOptionsDoc.Fields[7].Description = "Password"
	SSHClientOptionsDoc.Fields[7].Comments[encoder.LineComment] = "Password"
	SSHClientOptionsDoc.Fields[8].Name = "privateKey"
	SSHClientOptionsDoc.Fields[8].Type = "string"
	SSHClientOptionsDoc.Fields[8].Note = ""
	SSHClientOptionsDoc.Fields[8].Description = "Private key to use"
	SSHClientOptionsDoc.Fields[8].Comments[encoder.LineComment] = "Private key to use"
	SSHClientOptionsDoc.Fields[9].Name = "passphrase"
	SSHClientOptionsDoc.Fields[9].Type = "string"
	SSHClientOptionsDoc.Fields[9].Note = ""
	SSHClientOptionsDoc.Fields[9].Description = "Private key passphrase to use"
	SSHClientOptionsDoc.Fields[9].Comments[encoder.LineComment] = "Private key passphrase to use"
	SSHClientOptionsDoc.Fields[10].Name = "readyTimeout"
	SSHClientOptionsDoc.Fields[10].Type = "int"
	SSHClientOptionsDoc.Fields[10].Note = ""
	SSHClientOptionsDoc.Fields[10].Description = "Timeout in seconds"
	SSHClientOptionsDoc.Fields[10].Comments[encoder.LineComment] = "Timeout in seconds"
	SSHClientOptionsDoc.Fields[11].Name = "strictVendor"
	SSHClientOptionsDoc.Fields[11].Type = "bool"
	SSHClientOptionsDoc.Fields[11].Note = ""
	SSHClientOptionsDoc.Fields[11].Description = "Internal"
	SSHClientOptionsDoc.Fields[11].Comments[encoder.LineComment] = "Internal"
	SSHClientOptionsDoc.Fields[12].Name = "algorithms"
	SSHClientOptionsDoc.Fields[12].Type = "SSHAlgorithms"
	SSHClientOptionsDoc.Fields[12].Note = ""
	SSHClientOptionsDoc.Fields[12].Description = "SSH Algorithms to use"
	SSHClientOptionsDoc.Fields[12].Comments[encoder.LineComment] = "SSH Algorithms to use"
	SSHClientOptionsDoc.Fields[13].Name = "compress"
	SSHClientOptionsDoc.Fields[13].Type = "interface{}"
	SSHClientOptionsDoc.Fields[13].Note = ""
	SSHClientOptionsDoc.Fields[13].Description = "Internal"
	SSHClientOptionsDoc.Fields[13].Comments[encoder.LineComment] = "Internal"

	SSHAlgorithmsDoc.Type = "SSHAlgorithms"
	SSHAlgorithmsDoc.Comments[encoder.LineComment] = "SSHAlgorithms defines algorithms that can be used during an ssh session"
	SSHAlgorithmsDoc.Description = "SSHAlgorithms defines algorithms that can be used during an ssh session"
	SSHAlgorithmsDoc.AppearsIn = []encoder.Appearance{
		{
			TypeName:  "SSHClientOptions",
			FieldName: "algorithms",
		},
	}
	SSHAlgorithmsDoc.Fields = make([]encoder.Doc, 5)
	SSHAlgorithmsDoc.Fields[0].Name = "kex"
	SSHAlgorithmsDoc.Fields[0].Type = "[]string"
	SSHAlgorithmsDoc.Fields[0].Note = ""
	SSHAlgorithmsDoc.Fields[0].Description = "Kex"
	SSHAlgorithmsDoc.Fields[0].Comments[encoder.LineComment] = "Kex"
	SSHAlgorithmsDoc.Fields[1].Name = "cipher"
	SSHAlgorithmsDoc.Fields[1].Type = "[]string"
	SSHAlgorithmsDoc.Fields[1].Note = ""
	SSHAlgorithmsDoc.Fields[1].Description = "Ciphers accepted"
	SSHAlgorithmsDoc.Fields[1].Comments[encoder.LineComment] = "Ciphers accepted"
	SSHAlgorithmsDoc.Fields[2].Name = "serverHostKey"
	SSHAlgorithmsDoc.Fields[2].Type = "[]string"
	SSHAlgorithmsDoc.Fields[2].Note = ""
	SSHAlgorithmsDoc.Fields[2].Description = "Host keys accepted"
	SSHAlgorithmsDoc.Fields[2].Comments[encoder.LineComment] = "Host keys accepted"
	SSHAlgorithmsDoc.Fields[3].Name = "hmac"
	SSHAlgorithmsDoc.Fields[3].Type = "[]string"
	SSHAlgorithmsDoc.Fields[3].Note = ""
	SSHAlgorithmsDoc.Fields[3].Description = "HMAC accepted"
	SSHAlgorithmsDoc.Fields[3].Comments[encoder.LineComment] = "HMAC accepted"
	SSHAlgorithmsDoc.Fields[4].Name = "compress"
	SSHAlgorithmsDoc.Fields[4].Type = "[]string"
	SSHAlgorithmsDoc.Fields[4].Note = ""
	SSHAlgorithmsDoc.Fields[4].Description = "Compress"
	SSHAlgorithmsDoc.Fields[4].Comments[encoder.LineComment] = "Compress"

	CopyDoc.Type = "Copy"
	CopyDoc.Comments[encoder.LineComment] = "Copy defines the source and destination of a SCP operation. The source may be of various types. SCP and HTTP requests are streamed so they are recommended as sources. The destination has to be a SCP resource."
	CopyDoc.Description = "Copy defines the source and destination of a SCP operation. The source may be of various types. SCP and HTTP requests are streamed so they are recommended as sources. The destination has to be a SCP resource."
	CopyDoc.Fields = make([]encoder.Doc, 5)
	CopyDoc.Fields[0].Name = "source"
	CopyDoc.Fields[0].Type = "interface{}"
	CopyDoc.Fields[0].Note = ""
	CopyDoc.Fields[0].Description = "the source of the file"
	CopyDoc.Fields[0].Comments[encoder.LineComment] = "the source of the file"
	CopyDoc.Fields[0].Values = []string{
		"SCPResourceLocation",
	}
	CopyDoc.Fields[1].Name = "destination"
	CopyDoc.Fields[1].Type = "SCPResourceLocation"
	CopyDoc.Fields[1].Note = ""
	CopyDoc.Fields[1].Description = "the destination"
	CopyDoc.Fields[1].Comments[encoder.LineComment] = "the destination"
	CopyDoc.Fields[2].Name = "timeoutMinutes"
	CopyDoc.Fields[2].Type = "int"
	CopyDoc.Fields[2].Note = ""
	CopyDoc.Fields[2].Description = "timeout in minutes"
	CopyDoc.Fields[2].Comments[encoder.LineComment] = "timeout in minutes"
	CopyDoc.Fields[3].Name = "ifDestinationAlreadyExists"
	CopyDoc.Fields[3].Type = "string"
	CopyDoc.Fields[3].Note = ""
	CopyDoc.Fields[3].Description = "What to do if file exists at the destination. Defaults to 'overwrite'"
	CopyDoc.Fields[3].Comments[encoder.LineComment] = "What to do if file exists at the destination. Defaults to 'overwrite'"
	CopyDoc.Fields[3].Values = []string{
		"error",
		"overwrite",
		"errorIfNotSameSize",
		"overwriteIfNotSameSize",
		"ignore",
	}
	CopyDoc.Fields[4].Name = "type"
	CopyDoc.Fields[4].Type = "string"
	CopyDoc.Fields[4].Note = ""
	CopyDoc.Fields[4].Description = "internal"
	CopyDoc.Fields[4].Comments[encoder.LineComment] = "internal"

	SCPResourceLocationDoc.Type = "SCPResourceLocation"
	SCPResourceLocationDoc.Comments[encoder.LineComment] = "SCPResourceLocation defines a file path and SSH client connection options for use with Secure Copy Protocol (SCP)."
	SCPResourceLocationDoc.Description = "SCPResourceLocation defines a file path and SSH client connection options for use with Secure Copy Protocol (SCP)."
	SCPResourceLocationDoc.AppearsIn = []encoder.Appearance{
		{
			TypeName:  "Copy",
			FieldName: "destination",
		},
	}
	SCPResourceLocationDoc.Fields = make([]encoder.Doc, 2)
	SCPResourceLocationDoc.Fields[0].Name = "path"
	SCPResourceLocationDoc.Fields[0].Type = "string"
	SCPResourceLocationDoc.Fields[0].Note = ""
	SCPResourceLocationDoc.Fields[0].Description = "path"
	SCPResourceLocationDoc.Fields[0].Comments[encoder.LineComment] = "path"
	SCPResourceLocationDoc.Fields[1].Name = "target"
	SCPResourceLocationDoc.Fields[1].Type = "SSHClientOptions"
	SCPResourceLocationDoc.Fields[1].Note = ""
	SCPResourceLocationDoc.Fields[1].Description = "SSH Options for the target"
	SCPResourceLocationDoc.Fields[1].Comments[encoder.LineComment] = "SSH Options for the target"
}

func (StageDefinition) Doc() *encoder.Doc {
	return &StageDefinitionDoc
}

func (HTTPRequest) Doc() *encoder.Doc {
	return &HTTPRequestDoc
}

func (WebFetchAAPIOptions) Doc() *encoder.Doc {
	return &WebFetchAAPIOptionsDoc
}

func (WebFetchAPIRequestHeaders) Doc() *encoder.Doc {
	return &WebFetchAPIRequestHeadersDoc
}

func (AnsibleBundle) Doc() *encoder.Doc {
	return &AnsibleBundleDoc
}

func (WorkflowReference) Doc() *encoder.Doc {
	return &WorkflowReferenceDoc
}

func (SSHExec) Doc() *encoder.Doc {
	return &SSHExecDoc
}

func (SSHClientOptions) Doc() *encoder.Doc {
	return &SSHClientOptionsDoc
}

func (SSHAlgorithms) Doc() *encoder.Doc {
	return &SSHAlgorithmsDoc
}

func (Copy) Doc() *encoder.Doc {
	return &CopyDoc
}

func (SCPResourceLocation) Doc() *encoder.Doc {
	return &SCPResourceLocationDoc
}

// GetStageDefinitionDoc returns documentation for the file ./.
func GetStageDefinitionDoc() *encoder.FileDoc {
	return &encoder.FileDoc{
		Name:        "StageDefinition",
		Description: "",
		Structs: []*encoder.Doc{
			&StageDefinitionDoc,
			&HTTPRequestDoc,
			&WebFetchAAPIOptionsDoc,
			&WebFetchAPIRequestHeadersDoc,
			&AnsibleBundleDoc,
			&WorkflowReferenceDoc,
			&SSHExecDoc,
			&SSHClientOptionsDoc,
			&SSHAlgorithmsDoc,
			&CopyDoc,
			&SCPResourceLocationDoc,
		},
	}
}
