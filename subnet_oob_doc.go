// DO NOT EDIT: this file is automatically generated by docgen
package metalcloud

import (
	"github.com/projectdiscovery/yamldoc-go/encoder"
)

var SubnetOOBDoc encoder.Doc

func init() {
	SubnetOOBDoc.Type = "SubnetOOB"
	SubnetOOBDoc.Comments[encoder.LineComment] = "Subnet represents a subnet for OOB operations"
	SubnetOOBDoc.Description = "Subnet represents a subnet for OOB operations"

	SubnetOOBDoc.AddExample("", subnetOOBExample)
	SubnetOOBDoc.Fields = make([]encoder.Doc, 16)
	SubnetOOBDoc.Fields[0].Name = "id"
	SubnetOOBDoc.Fields[0].Type = "int"
	SubnetOOBDoc.Fields[0].Note = ""
	SubnetOOBDoc.Fields[0].Description = "The id of the object"
	SubnetOOBDoc.Fields[0].Comments[encoder.LineComment] = "The id of the object"
	SubnetOOBDoc.Fields[1].Name = "label"
	SubnetOOBDoc.Fields[1].Type = "string"
	SubnetOOBDoc.Fields[1].Note = ""
	SubnetOOBDoc.Fields[1].Description = "The label of the object"
	SubnetOOBDoc.Fields[1].Comments[encoder.LineComment] = "The label of the object"
	SubnetOOBDoc.Fields[2].Name = "type"
	SubnetOOBDoc.Fields[2].Type = "string"
	SubnetOOBDoc.Fields[2].Note = ""
	SubnetOOBDoc.Fields[2].Description = "The type of the object"
	SubnetOOBDoc.Fields[2].Comments[encoder.LineComment] = "The type of the object"
	SubnetOOBDoc.Fields[2].Values = []string{
		"ipv4",
		"ipv6",
	}
	SubnetOOBDoc.Fields[3].Name = "useForAutoAllocation"
	SubnetOOBDoc.Fields[3].Type = "bool"
	SubnetOOBDoc.Fields[3].Note = ""
	SubnetOOBDoc.Fields[3].Description = "If set to `true` this subnet will be used for auto-allocation of IPs"
	SubnetOOBDoc.Fields[3].Comments[encoder.LineComment] = "If set to `true` this subnet will be used for auto-allocation of IPs"
	SubnetOOBDoc.Fields[4].Name = "forResourceType"
	SubnetOOBDoc.Fields[4].Type = "string"
	SubnetOOBDoc.Fields[4].Note = ""
	SubnetOOBDoc.Fields[4].Description = "What type of resource to allocate this object for"
	SubnetOOBDoc.Fields[4].Comments[encoder.LineComment] = "What type of resource to allocate this object for"
	SubnetOOBDoc.Fields[4].Values = []string{
		"server",
		"network_equipment",
		"any",
	}
	SubnetOOBDoc.Fields[5].Name = "blacklist"
	SubnetOOBDoc.Fields[5].Type = "[]string"
	SubnetOOBDoc.Fields[5].Note = ""
	SubnetOOBDoc.Fields[5].Description = "description: Array of IPs that are to be skipped from the interval\nexamples:\n  - value: ['192.168.0.10','192.168.0.22']\n"
	SubnetOOBDoc.Fields[5].Comments[encoder.LineComment] = "description: Array of IPs that are to be skipped from the interval"

	SubnetOOBDoc.Fields[6].Name = "gatewayHex"
	SubnetOOBDoc.Fields[6].Type = "string"
	SubnetOOBDoc.Fields[6].Note = ""
	SubnetOOBDoc.Fields[6].Description = "The Gateway in hexadecimal format. Readonly."
	SubnetOOBDoc.Fields[6].Comments[encoder.LineComment] = "The Gateway in hexadecimal format. Readonly."
	SubnetOOBDoc.Fields[7].Name = "gateway"
	SubnetOOBDoc.Fields[7].Type = "string"
	SubnetOOBDoc.Fields[7].Note = ""
	SubnetOOBDoc.Fields[7].Description = "description: The Gateway to use when allocating IPs from this subnet.\nexamples:\n  -values:  '\"192.168.0.1\"'\n"
	SubnetOOBDoc.Fields[7].Comments[encoder.LineComment] = "description: The Gateway to use when allocating IPs from this subnet."
	SubnetOOBDoc.Fields[8].Name = "netmaskHex"
	SubnetOOBDoc.Fields[8].Type = "string"
	SubnetOOBDoc.Fields[8].Note = ""
	SubnetOOBDoc.Fields[8].Description = "The Netmask in hexadecimal format. Readonly."
	SubnetOOBDoc.Fields[8].Comments[encoder.LineComment] = "The Netmask in hexadecimal format. Readonly."
	SubnetOOBDoc.Fields[9].Name = "netmask"
	SubnetOOBDoc.Fields[9].Type = "string"
	SubnetOOBDoc.Fields[9].Note = ""
	SubnetOOBDoc.Fields[9].Description = "The Netmask to use."
	SubnetOOBDoc.Fields[9].Comments[encoder.LineComment] = "The Netmask to use."

	SubnetOOBDoc.Fields[9].AddExample("", "255.255.255.192")
	SubnetOOBDoc.Fields[10].Name = "size"
	SubnetOOBDoc.Fields[10].Type = "int"
	SubnetOOBDoc.Fields[10].Note = ""
	SubnetOOBDoc.Fields[10].Description = "The Prefix size in CIDR format. Must match the netmask"
	SubnetOOBDoc.Fields[10].Comments[encoder.LineComment] = "The Prefix size in CIDR format. Must match the netmask"

	SubnetOOBDoc.Fields[10].AddExample("", 26)
	SubnetOOBDoc.Fields[11].Name = "rangeStartHex"
	SubnetOOBDoc.Fields[11].Type = "string"
	SubnetOOBDoc.Fields[11].Note = ""
	SubnetOOBDoc.Fields[11].Description = "The start of the range in hexadecimal. Readonly."
	SubnetOOBDoc.Fields[11].Comments[encoder.LineComment] = "The start of the range in hexadecimal. Readonly."
	SubnetOOBDoc.Fields[12].Name = "rangeStart"
	SubnetOOBDoc.Fields[12].Type = "string"
	SubnetOOBDoc.Fields[12].Note = ""
	SubnetOOBDoc.Fields[12].Description = "The start of the range"
	SubnetOOBDoc.Fields[12].Comments[encoder.LineComment] = "The start of the range"

	SubnetOOBDoc.Fields[12].AddExample("", "192.168.0.10")
	SubnetOOBDoc.Fields[13].Name = "rangeEndHex"
	SubnetOOBDoc.Fields[13].Type = "string"
	SubnetOOBDoc.Fields[13].Note = ""
	SubnetOOBDoc.Fields[13].Description = "The end of the range in hexadecimal. Readonly"
	SubnetOOBDoc.Fields[13].Comments[encoder.LineComment] = "The end of the range in hexadecimal. Readonly"
	SubnetOOBDoc.Fields[14].Name = "rangeEnd"
	SubnetOOBDoc.Fields[14].Type = "string"
	SubnetOOBDoc.Fields[14].Note = ""
	SubnetOOBDoc.Fields[14].Description = "The end of the range."
	SubnetOOBDoc.Fields[14].Comments[encoder.LineComment] = "The end of the range."

	SubnetOOBDoc.Fields[14].AddExample("", "192.168.0.100")
	SubnetOOBDoc.Fields[15].Name = "datacenter"
	SubnetOOBDoc.Fields[15].Type = "string"
	SubnetOOBDoc.Fields[15].Note = ""
	SubnetOOBDoc.Fields[15].Description = "The data center in which this subnet is valid"
	SubnetOOBDoc.Fields[15].Comments[encoder.LineComment] = "The data center in which this subnet is valid"
}

func (SubnetOOB) Doc() *encoder.Doc {
	return &SubnetOOBDoc
}

// GetSubnetOOBDoc returns documentation for the file ./.
func GetSubnetOOBDoc() *encoder.FileDoc {
	return &encoder.FileDoc{
		Name:        "SubnetOOB",
		Description: "",
		Structs: []*encoder.Doc{
			&SubnetOOBDoc,
		},
	}
}
